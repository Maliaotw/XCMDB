# SECURITY WARNING=keep the secret key used in production secret!
# 加密秘钥 生产环境中请修改为随机字符串，请勿外泄, 可使用命令生成
# $ cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 49;echo
# python -c 'import random; result = "".join([random.choice("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)") for i in range(50)]); print(result)'
# python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=9IxPAKX45uVsjPk9tw7knJUWZXUS6T5vgLS82Ej6L54CfCpHBf9pzCU7l4cMfUbG

# Development env open this, when error occur display the full process track, Production disable it
# DEBUG 模式 开启DEBUG后遇到错误时可以看到更多日志
#DEBUG=true
DEBUG=false

# DEBUG, INFO, WARNING, ERROR, CRITICAL can set. See https://docs.djangoproject.com/en/1.10/topics/logging/
# 日志级别
# LOG_LEVEL=DEBUG
# LOG_DIR=

# Session expiration setting, Default 24 hour, Also set expired on on browser close
# 浏览器Session过期时间，默认24小时, 也可以设置浏览器关闭则过期
# SESSION_COOKIE_AGE=86400
# SESSION_EXPIRE_AT_BROWSER_CLOSE=false

# MySQL or postgres setting like:
# 使用Mysql作为数据库
DB_ENGINE=mysql
DB_HOST=mysql
DB_PORT=3306
MYSQL_DATABASE=cmdb
DB_USER=root
MYSQL_USER=root
MYSQL_ROOT_PASSWORD=123456

# When Django start it will bind this host and port
# ./manage.py runserver 127.0.0.1:8080
# 运行时绑定端口
HTTP_BIND_HOST=0.0.0.0
HTTP_LISTEN_PORT=8000

# Use Redis as broker for celery and web socket
# Redis配置
CELERY_BROKER_URL=redis://redis:6379/0
REDIS_URL=redis://redis:6379/0
REDIS_HOST=redis
REDIS_PORT=6379
# REDIS_PASSWORD:
REDIS_DB_CELERY=3
REDIS_DB_CACHE=2

# VCENTER
VCENTER_SERVER=
VCENTER_USER=
VCENTER_PASS=

# IDRAC
IDRAC_USER=
IDRAC_PASSWD=


# ------ AUTH_LDAP ------
AUTH_LDAP=
# LDAP地址*
AUTH_LDAP_SERVER_URI=
# 绑定DN
AUTH_LDAP_BIND_DN=
# 密码
AUTH_LDAP_BIND_PASSWORD=
# 用户OU
AUTH_LDAP_SEARCH_OU=
# 用户过滤器*
AUTH_LDAP_SEARCH_FILTER=
AUTH_LDAP_START_TLS=
# LDAP属性映射*
AUTH_LDAP_USER_ATTR_MAP=

EMAIL_SUFFIX=

# ------ BOOTSTRAP_TOKEN ------

ASSETKEY=HJHzo3YzElgZG2YtoBs62YMpYwguW0C8b8LJYJzcs






